private_lane :publish_wordpress do |options|
  file = options.fetch(:file)

  url = URI.parse('https://provenance-emu.com/wp/v2/media')
  filename = File.basename(file)
  File.open(file) do |ipa|
    req = Net::HTTP::Post::Multipart.new url.path,
                                         'file' => UploadIO.new(ipa, 'application/octet-stream', filename)
    res = Net::HTTP.start(url.host, url.port) do |http|
      http.request(req)
    end
    UI.message "Wordpress response code: #{res.code}"
  end
end

desc 'Upload to S3'
private_lane :publish_s3 do |options|
  ipa_name = options.fetch(:ipa_name, 'Provenance.ipa')
  dsym_name = options.fetch(:dsym_name, 'Provenance.app.dSYM.zip')
  bucket = options.fetch(:bucket, 'Pprovenance-builds')
  region = options.fetch(:region, 'us-east-1')

  access_key = ENV['S3_ACCESS_KEY']
  secret_access_key = ENV['S3_SECRET_ACCESS_KEY']

  # build_number = ENV['build_number']
  # build_time = Time.now.strftime('%F')

  path = "#{CFBundleShortVersionString}/#{git_branch}/#{CFBundleVersion}/"

   # Optional but nice if you want to put multiple apps in same bucket
  app_directory = 'iOS'

  endpoint = 'http://provenance.joemattiello.com:9002'

  # Upload version.json, plist and HTML.
  upload_metadata = false

  aws_s3(
    access_key: access_key,
    secret_access_key: secret_access_key,
    bucket: bucket,
    region: region,
    endpoint: endpoint,     # Optional, for buckets that require a specific endpoint
    ipa: ipa_name,          # Required (if not uploading an APK).
    dsym: dsym_name,        # Optional is you use `ipa` to build.
    app_directory: app_directory,
    path: path,
    upload_metadata: upload_metadata
  )
end

lane :default_changelog do
  changelog = changelog_from_git_commits(
    between: [ENV['GIT_PREVIOUS_SUCCESSFUL_COMMIT'] || 'HEAD^^^^^', 'HEAD'],
    pretty: 'â€¢ %s\n',
    merge_commit_filtering: 'only_include_merges'
  )
  changelog = changelog.sub(/[\u{1F300}-\u{1F6FF}]/, '')
  Actions.lane_context[SharedValues::FL_CHANGELOG] = changelog
  UI.message "Change Log:\n#{changelog}"
  changelog
end

# Publish to hockeyapp
private_lane :publish_hockey do |options|
  # Send to hockey app
  # NOTE: hockey action will use the latest ipa and latest dsym built
  release_type = options.fetch(:release_type, '2')
  platform = options.fetch(:platform, 'iOS')

  defaultAppID = platform == 'tvOS' ? '613008343753414d93a7202324461575' : 'a1fd56cd852d4c959988484eba69f724'
  defaultAPIToken = platform == 'tvOS' ? 'ebab75c05afa4706b0ffa531fe3cf830' : "6f0fc66f062044349a25aaeede834921"

  api_token = ENV['HOCKEY_APP_TOKEN'] || defaultAPIToken
  public_identifier = ENV['HOCKEY_BETA_APP_ID'] || defaultAppID
  notify = '1'
  repository_url = 'https://github.com/Provenance-Emu/Provenance/'

  change_log = default_changelog
  notes = "The Official Provenance Beta\n\n#{change_log}"

  hockey(
    api_token: api_token,
    notes: notes,
    public_identifier: public_identifier,
    release_type: release_type,
    notify: notify,
    repository_url: repository_url
  )

  # Alert discord?
  link = lane_context[SharedValues::HOCKEY_DOWNLOAD_LINK]
  UI.message "Hockeyapp download link is at #{link}."
end

private_lane :scp_upload do |options|

  source = options[:source]
  subfolder = options[:subfolder]

  unless File.exist?(source)
    UI.user_error!("Couldn't find file '#{source}'")
  end

  filename = File.basename(source)

  host = 'provenance.joemattiello.com'
  port = '22'

  destination = "/usr/share/nginx/provenance.joemattiello.com/www/TravisBuilds/#{git_branch}/#{subfolder}/#{filename}"
  username = ENV['FASTLANE_USER'] || 'provenance'

  UI.message "SCP'ing from #{source} to #{host}:#{destination}"

  scp(
    username: username,
    # password: ENV["FASTLANE_PASSWORD"],
    host: host,
    port: port,
    upload: {
      src: source,
      dst: destination
    }
  )
end

private_lane :submit_appstore do
  load_keys
  pilot(app_identifier: "#{$dev_domain}.provenance")
end
